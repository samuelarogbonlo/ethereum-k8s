apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: geth
  namespace: ethereum-node
spec:
  serviceName: "geth"
  replicas: 1
  selector:
    matchLabels:
      app: geth
  template:
    metadata:
      labels:
        app: geth
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "6060"
    spec:
      terminationGracePeriodSeconds: 300
      securityContext:
        fsGroup: 2000  # Set group ID for volume access
      containers:
      - name: geth
        image: ethereum/client-go:latest
        imagePullPolicy: IfNotPresent
        args:
        - "--config=/config/geth-config.toml"
        - "--authrpc.addr=0.0.0.0"
        - "--authrpc.port=8551"
        - "--authrpc.vhosts=*"
        - "--authrpc.jwtsecret=/secrets/jwt/jwtsecret"
        ports:
        - containerPort: 8545
          name: rpc
        - containerPort: 8546
          name: ws
        - containerPort: 8551
          name: engine
        - containerPort: 30303
          name: p2p-tcp
          protocol: TCP
        - containerPort: 30303
          name: p2p-udp
          protocol: UDP
        - containerPort: 6060
          name: metrics
        volumeMounts:
        - name: geth-data
          mountPath: /data
        - name: config
          mountPath: /config
        - name: jwt-secret
          mountPath: /secrets/jwt
          readOnly: true
        resources:
          requests:
            cpu: "2"
            memory: "4Gi"
          limits:
            cpu: "4"
            memory: "8Gi"
        livenessProbe:
          httpGet:
            path: /
            port: 8545
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 5
        readinessProbe:
          httpGet:
            path: /
            port: 8545
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
      volumes:
      - name: config
        configMap:
          name: geth-config
      - name: jwt-secret
        secret:
          secretName: jwt-secret
      - name: geth-data
        persistentVolumeClaim:
          claimName: geth-data-pvc