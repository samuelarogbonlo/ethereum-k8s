---
# Ethereum-specific dependencies and setup

- name: Check if storage device exists
  stat:
    path: "{{ storage_device }}"
  register: storage_device_stat

- name: Format storage device if it exists
  filesystem:
    fstype: "{{ filesystem_type }}"
    dev: "{{ storage_device }}"
  when: storage_device_stat.stat.exists

- name: Create mount point directory
  file:
    path: "{{ mount_point }}"
    state: directory
    mode: 0755

- name: Mount storage device
  mount:
    path: "{{ mount_point }}"
    src: "{{ storage_device }}"
    fstype: "{{ filesystem_type }}"
    state: mounted
  when: storage_device_stat.stat.exists

- name: Create Ethereum data directories
  file:
    path: "{{ item }}"
    state: directory
    mode: 0755
    owner: 1000
    group: 1000
  with_items:
    - "{{ ethereum_data_dir }}"
    - "{{ geth_data_dir }}"
    - "{{ lighthouse_data_dir }}"

- name: Pull Ethereum Docker images
  command: "docker pull {{ item }}"
  with_items:
    - "ethereum/client-go:latest"
    - "sigp/lighthouse:latest"
    - "prom/prometheus:latest"
    - "grafana/grafana:latest"
    - "prom/node-exporter:latest"

- name: Create Kubernetes namespace for monitoring
  k8s:
    name: monitoring
    api_version: v1
    kind: Namespace
    state: present

- name: Copy Ethereum Kubernetes manifests
  copy:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    mode: 0644
  with_items:
    - { src: "files/kubernetes/ethereum-k8s/", dest: "/home/{{ ansible_user }}/ethereum-k8s/" }

- name: Create JWT secret for Ethereum clients
  k8s:
    state: present
    definition:
      apiVersion: v1
      kind: ConfigMap
      metadata:
        name: jwt-secret
        namespace: default
      data:
        jwt.hex: "0xd4e56740f876aef8c010b86a40d5f56745a118d0906a34e69aec8c0db1cb8fa3"