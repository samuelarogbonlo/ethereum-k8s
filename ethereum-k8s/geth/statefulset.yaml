apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: geth
spec:
  serviceName: "geth"
  replicas: 1
  selector:
    matchLabels:
      app: geth
  template:
    metadata:
      labels:
        app: geth
    spec:
      securityContext:
        fsGroup: 2000
        runAsUser: 1000
      containers:
      - name: geth
        image: ethereum/client-go:latest
        env:
        - name: GETH_PORT
          value: ""
        args:
          - "--datadir=/data"
          - "--sepolia"
          - "--syncmode=snap"
          - "--port=30303"
          - "--http"
          - "--http.port=8545"
          - "--http.addr=0.0.0.0"
          - "--http.vhosts=*"
          - "--http.api=eth,net,web3,txpool"
          - "--ws"
          - "--ws.port=8546"
          - "--ws.addr=0.0.0.0"
          - "--ws.origins=*"
          - "--metrics"
          - "--metrics.addr=0.0.0.0"
          - "--metrics.port=6060"  # Dedicated metrics port
          - "--authrpc.addr=0.0.0.0"
          - "--authrpc.port=8551"
          - "--authrpc.vhosts=*"
          - "--authrpc.jwtsecret=/secrets/jwt/jwt.hex"
        ports:
        - containerPort: 8545
          name: http-rpc
        - containerPort: 8546
          name: ws-rpc
        - containerPort: 30303
          name: p2p-tcp
        - containerPort: 30303
          protocol: UDP
          name: p2p-udp
        - containerPort: 8551
          name: engine-api
        - containerPort: 6060
          name: metrics      # Added metrics port
        volumeMounts:
        - name: data
          mountPath: /data
        - name: jwt-secret
          mountPath: /secrets/jwt
        resources:
          requests:
            memory: "2Gi"
            cpu: "1"
          limits:
            memory: "4Gi"
            cpu: "2"
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: geth-data-pvc
      - name: jwt-secret
        configMap:
          name: jwt-secret