apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: lighthouse
  labels:
    app: lighthouse
    {{- include "ethereum-node.labels" . | nindent 4 }}
spec:
  serviceName: "lighthouse"
  replicas: 1
  selector:
    matchLabels:
      app: lighthouse
  template:
    metadata:
      labels:
        app: lighthouse
    spec:
      securityContext:
        fsGroup: 2000
        runAsUser: 1000
      containers:
      - name: lighthouse
        image: "{{ .Values.lighthouse.image.repository }}:{{ .Values.lighthouse.image.tag }}"
        imagePullPolicy: {{ .Values.lighthouse.image.pullPolicy }}
        command: ["lighthouse"]
        args: {{ toYaml .Values.lighthouse.args | nindent 10 }}
        ports:
        - containerPort: 9000
          name: p2p-tcp
        - containerPort: 9000
          protocol: UDP
          name: p2p-udp
        - containerPort: 5052
          name: http-api
        - containerPort: 5054
          name: metrics
        volumeMounts:
        - name: data
          mountPath: /data
        - name: jwt-secret
          mountPath: /secrets/jwt
        resources: {{ toYaml .Values.lighthouse.resources | nindent 10 }}
      volumes:
      - name: jwt-secret
        configMap:
          name: jwt-secret
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: {{ .Values.global.storageClass }}
      resources:
        requests:
          storage: {{ .Values.lighthouse.persistence.size }}